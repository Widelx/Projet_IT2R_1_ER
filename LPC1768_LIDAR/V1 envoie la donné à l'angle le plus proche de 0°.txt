#include "LPC17xx.h"                    // Device header
#include "GPIO_LPC17xx.h"               // Keil::Device:GPIO
#include "Driver_USART.h"               // ::CMSIS Driver:USART
#include "Board_GLCD.h"                 // ::Board Support:Graphic LCD
#include "Driver_SPI.h"                 // ::CMSIS Driver:SPI
#include "stdio.h"
#include "LIDAR.h"
#include "GPIO.h"


#define VITESSE_LIDAR 999;

extern ARM_DRIVER_USART Driver_USART1;
extern GLCD_FONT GLCD_Font_6x8;
extern GLCD_FONT GLCD_Font_16x24;

int TRAME_START = 0x20 ;
int TRAME_STOP = 0x25 ;
int TRAME_RESET = 0x40 ;
int PRE_TRAME = 0xA5 ;
bool etatled = 0;
char value[5000];
int counter = 0;

void reception_trame(void);

char text[50];
int i=0,y=0;
int turn = 0;
int angle;
int distance;



int main(void){
	
	
	Init_UART1();
	initPwm();
	GLCD_Initialize();
	GLCD_ClearScreen();
	Initialise_GPIO();
	GLCD_SetFont(&GLCD_Font_16x24);
	
	LPC_PWM1->MR3 = VITESSE_LIDAR; // ceci ajuste la duree de l'Ã©tat haut

	
	
	Start_LIDAR();
	
	Driver_USART1.Receive(value,5000);
	while(Driver_USART1.GetRxCount()<5000);
	
	Stop_LIDAR();
		
	for(y=0;y<1000;y++){
	counter = y*5;
	//sprintf(text,"value = %x       ",value[counter]);
	//GLCD_DrawString(10,20,text);
		
	if((value[counter] & 0x01) == 0x01){
		angle=(arrayToAngle(value[counter + 1],value[counter +2]))/64;
		distance=(arrayToRange(value[counter + 3],value[ counter + 4]))/40;
		sprintf(text,"distance = %d       ",distance);
		GLCD_DrawString(10,140,text);
		sprintf(text,"angle = %d       ",angle);
	GLCD_DrawString(10,160,text);
	}
		
	
	
	
	}	
	
		
	return 0;

}

/*
void reception_trame(void){
	char value[5];
	int mesure[5];
	int index = 0;
	
	
	
	Driver_USART1.Receive(value,5);
	while(Driver_USART1.GetRxCount()<5);
	

	sprintf(text,"LED = %d       ",etatled);
	GLCD_DrawString(10,10,text);
	etatled=(value[0] & 0x01);
 
	if((value[0] & 0x01) == 0x01){
		turn++;
		if( etatled == 1){Allumer_1LED(0);}
		if( etatled == 0){Eteindre_1LED(0);}
	}
		
		angle=(arrayToAngle(value[1],value[2]))/64;
		distance=(arrayToRange(value[3],value[4]))/40;
		
	
	
	
}



*/













